/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 40 41 36 37 38>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 3 39 40 41>;
        };
    };

    combos {
        compatible = "zmk,combos";

        jk_esc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };

        kl_und {
            bindings = <&kp UNDERSCORE>;
            key-positions = <20 21>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <32 33>;
        };

        single_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <22 21>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <19 18>;
        };

        backtick {
            bindings = <&kp GRAVE>;
            key-positions = <1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q        &kp W            &kp E                &kp R              &kp T      &kp Y        &kp U              &kp I                &kp O            &kp P                           &none
&none  &hml LGUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G      &kp H        &hmr LEFT_SHIFT J  &hmr LEFT_CONTROL K  &hmr LEFT_ALT L  &hmr LEFT_COMMAND SINGLE_QUOTE  &none
&none  &kp Z        &kp X            &kp C                &kp V              &kp B      &kp N        &kp M              &kp COMMA            &kp DOT          &kp FSLH                        &none
                                     &kp BACKSPACE        &mo 1              &kp TAB    &lt 2 ENTER  &kp SPACE          &kp LEFT_SHIFT
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp N1        &kp N2      &kp N3         &kp N4        &kp N5           &kp N6                &kp N7                 &kp N8            &kp N9             &kp N0             &trans
&trans  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)         &kp LS(AMPS)           &kp LS(STAR)      &kp LS(LPAR)       &kp LS(SEMICOLON)  &trans
&trans  &trans        &trans      &trans         &trans        &trans           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH      &trans
                                  &trans         &trans        &trans           &trans                &trans                 &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp GRAVE   &trans        &trans        &trans        &trans    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans      &trans        &trans        &trans        &trans    &trans    &trans    &trans  &trans     &trans  &trans
                                  &trans        &trans        &trans    &trans    &trans    &trans
            >;
        };
    };
};
